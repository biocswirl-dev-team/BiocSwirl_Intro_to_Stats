- Class: meta
  Course: intro_to_stats
  Lesson: lab01_correlation
  Author: Sourav Singh, Bruno Grande
  Type: Standard
  Organization: your organization's name goes here
  Version: 2.4.5

- Class: text
  Output: Welcome to the correlation lesson!

- Class: text
  Output: The previous lesson covered how to use the `ggplot2` package to visualize data and gather further insights on the data. This lesson plan would cover various statistical approaches that can allow us to better interpret our data.
  
- Class: text
  Output: This tutorial will cover the use of two statistical methods: correlation and two-sample tests. These are inescapable in the life sciences. You will learn what each method can achieve, what information they can provide, how to interpret the outcome, and how to visualize the results.

- Class: text
  Output: First we shall use the gene expression dataset as part of this lesson plan. The data has been adapted from Chan, Chang S., et al. Nature communications 9.1 (2018): 1-10. https://doi.org/10.1038/s41467-018-06498-2

- Class: cmd_question
  Output: "First, we will start off by loading the metadata file. metadata <- read.csv("data/pannets_metadata.csv")'"
  CorrectAnswer: metadata <- read.csv("data/pannets_metadata.csv")
  AnswerTests: omnitest(correctExpr = 'metadata <- read.csv("data/pannets_metadata.csv")')
  Hint: Try copying the read.csv code from the text above.
  
- Class: cmd_question
  Output: "Next, we shall load the RNAseq gene dataset. rnaseq <- read_csv("data/pannets_expr_rnaseq.csv.gz")'"
  CorrectAnswer: rnaseq <- read_csv("data/pannets_expr_rnaseq.csv.gz")
  AnswerTests: omnitest(correctExpr = 'rnaseq <- read_csv("data/pannets_expr_rnaseq.csv.gz")')
  Hint: Try copying the read.csv code from the text above.
  
- Class: mult_question
  Output: How do we display the first few rows of the rnaseq gene expression dataset?
  AnswerChoices: summary(rnaseq);tail(rnaseq);head(rnaseq);dim(rnaseq)
  CorrectAnswer: head(rnaseq)
  AnswerTests: omnitest(correctVal = 'head(rnaseq)')
  Hint: Check the output of 'head(rnaseq)'

- Class: cmd_question
  Output: "Now we need to create pivot table in long form for expression data. columns should be -Gene, names_to should be Tumor and values_to should be Expr. Store it into rnaseq_long."
  CorrectAnswer: rnaseq_long <- pivot_longer(rnaseq, cols = -Gene, names_to = "Tumour", values_to = "Expr")
  AnswerTests: omnitest(correctExpr = 'rnaseq_long <- pivot_longer(rnaseq, cols = -Gene, names_to = "Tumour", values_to = "Expr")')
  
- Class: cmd_question
  Output: "Use the Pivot table created before to create another pivot table in wide form. Identifier columns should be Tumour, names parameter should be Gene and values should be obtained from Expr."
  CorrectAnswer: rnaseq_wide <- pivot_wider(rnaseq_long, id_cols = Tumour, names_from = Gene, values_from = Expr)
  AnswerTests: omnitest(correctExpr = 'rnaseq_wide <- pivot_wider(rnaseq_long, id_cols = Tumour, names_from = Gene, values_from = Expr)')
  
  
- Class: cmd_question
  Output: "Next, we shall load the microarray gene expression dataset. array <- read_csv("data/pannets_expr_array.csv.gz")'"
  CorrectAnswer: array <- read_csv("data/pannets_expr_array.csv.gz")
  AnswerTests: omnitest(correctExpr = 'array <- read_csv("data/pannets_expr_array.csv.gz")')
  Hint: Try copying the read.csv code from the previous commands.


- Class: cmd_question
  Output: "Now we need to create pivot table in long form for gene expression data. The pivot table should be stored in array_long."
  CorrectAnswer: array_long <- pivot_longer(array, cols = -Gene, names_to = "Tumour", values_to = "Expr")
  AnswerTests: omnitest(correctExpr = 'array_long <- pivot_longer(array, cols = -Gene, names_to = "Tumour", values_to = "Expr")')
  Hint: Look at the command we executed previously for the idea.
  
- Class: cmd_question
  Output: "Now we create a Pivot table in Long form using the array_long variable. The data should be stored in array_wide."
  CorrectAnswer: array_wide <- pivot_wider(array_long, id_cols = Tumour, names_from = Gene, values_from = Expr)
  AnswerTests: omnitest(correctExpr = 'array_wide <- pivot_wider(array_long, id_cols = Tumour, names_from = Gene, values_from = Expr)')
  Hint: Look at the command we have written to create a wide pivot table for RNASeq data.

- Class: text
  Output: Now we compare ACTB gene expression between RNA-seq and microarray data. For this we first need to create a dataframe, create a scatterplot between RNASeq Gene Expression vs microarray gene expression.

- Class: cmd_question
  Output: "Lets start by creating a data frame for Tumor vs ACTB gene expression. For this we need to create three columns- tumour, rnaseq and array and obtain data for these columns from the rnaseq_wide and array_wide data for ACTB"
  CorrectAnswer: actb <- data.frame(tumour = rnaseq_wide$Tumour, rnaseq = rnaseq_wide$ACTB, array = array_wide$ACTB)
  AnswerTests: omnitest(correctExpr = 'actb <- data.frame(tumour = rnaseq_wide$Tumour, rnaseq = rnaseq_wide$ACTB, array = array_wide$ACTB)')
  

- Class: cmd_question
  Output: "Now lets create a scatter plot to find the relation between RNASeq Gene Expression vs Microarray Gene Expression"
  CorrectAnswer: ggplot(actb, aes(x = rnaseq, y = array)) + geom_point() + labs(title = "ACTB expression")
  AnswerTests: omnitest(correctExpr = 'ggplot(actb, aes(x = rnaseq, y = array)) + geom_point() + labs(title = "ACTB expression")')
  
- Class: text
  Output: For calculating correlations between two variables, we have the cor() function which takes as parameters the variables between which the correlations need to be calculated and the method of calculation for correlation.
  
- Class: cmd_question
  Output: "Let us first calculate the correlation between RNAseq and microarray using pearson method."
  CorrectAnswer: cor(actb$rnaseq, actb$array, method = "pearson")
  AnswerTests: omnitest(correctExpr = 'cor(actb$rnaseq, actb$array, method = "pearson")')
  
- Class: cmd_question
  Output: "Let us first calculate the correlation between RNAseq and microarray using spearman method."
  CorrectAnswer: cor(actb$rnaseq, actb$array, method = "pearson")
  AnswerTests: omnitest(correctExpr = 'cor(actb$rnaseq, actb$array, method = "spearman")') 


